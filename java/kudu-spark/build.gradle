// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

apply plugin: "scala"
apply from: "$rootDir/gradle/shadow.gradle"

dependencies {
  implementation project(path: ":kudu-client", configuration: "shadow")
  implementation libs.hdrhistogram
  // TODO(KUDU-2500): Spark uses reflection which requires the annotations at runtime.
  implementation libs.yetusAnnotations

  implementation libs.sparkCore
  implementation libs.sparkSql

  compileOnly libs.scalaLibrary
  compileOnly libs.slf4jApi

  testImplementation project(path: ":kudu-test-utils", configuration: "shadow")
  testImplementation libs.junit
  testImplementation libs.scalatest
  testImplementation libs.log4jApi
  testImplementation libs.log4jCore
  testImplementation libs.log4jSlf4jImpl
}

// shadowJar {
//   dependencies {
//     // exclude(dependency(libs.sparkCore))
//     // exclude(dependency(libs.sparkSql))
//     // exclude(dependency(libs.yetusAnnotations))
//     // exclude(dependency(libs.jsr305))
//     // exclude(dependency("javax.servlet.jsp::.*"))
//     // exclude(dependency("javax.activation::.*"))
//     // exclude(dependency("com.fasterxml.jackson.core::.*"))
//     // exclude(dependency("org.codehaus.jackson::.*"))
//     // exclude(dependency("org.apache.parquet:.*"))
//     // exclude(dependency("org.apache.ivy:ivy::.*"))
//     // exclude(dependency("org.apache.spark::.*"))
//     // exclude(dependency("org.apache.hadoop::.*"))
//     // exclude(dependency("org.scala-lang::.*"))
//     // exclude(dependency("org.apache.kerby:.*"))
//     // exclude(dependency("org.apache.commons::.*"))
//     // exclude(dependency("org.eclipse.jetty::.*"))
//     // exclude(dependency("org.apache.avro::.*"))
//     // exclude(dependency("org.codehaus.janino::.*"))
//     // exclude(dependency("com.nimbusds::.*"))
//     // exclude(dependency("org.apache.curator::.*"))
//     // exclude(dependency("org.glassfish.jersey.core::.*"))
//     // exclude(dependency("log4j:log4j:.*"))
//     // exclude(dependency("org.xerial.snappy::.*"))
//     // exclude(dependency("com.github.luben::.*"))
//   }
//   // exclude 'META-INF/services/**'
//   // exclude 'META-INF/**/*.dll'
//   // exclude 'META-INF/**/*.md'
//   // exclude 'META-INF/**/*.adoc'
//   // exclude 'META-INF/versions/11/**'
//   // exclude 'codegen/**'
//   // exclude 'javax/**'
//   // exclude 'jline/**'
//   // exclude 'net/**'
// }

// Adjust the artifact name to include the spark and scala base versions.
archivesBaseName = "kudu-spark${versions.sparkBase}_${versions.scalaBase}"

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
  // This class causes SpotBugs runtime errors, so we completely ignore it from analysis.
  classes = classes.filter { !it.path.contains("SparkSQLTest") }
}